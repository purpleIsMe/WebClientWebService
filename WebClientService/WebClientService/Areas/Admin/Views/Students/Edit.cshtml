@model Model.EF.Student

@{
    SelectList listclass = ViewBag.IDClass;
   // List<Student> x = (List < Student >) ViewBag.editstu;
    ViewBag.Title = "Edit";
    Layout = "/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@section Header
{
    Chỉnh sửa chi tiết thông tin sinh viên
}
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                Thông tin sinh viên
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="center">
                        <div class="col-lg-6">
                            @using (Html.BeginForm("Edit", "Students", FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(Model => Model.Name, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.TextBoxFor(Model => Model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(Model => Model.Name, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(Model => Model.UserName, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.TextBoxFor(Model => Model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(Model => Model.UserName, "", new { @class = "text-danger" })
                                </div>
                                <div id="hidden">
                                    @Html.HiddenFor(Model => Model.Password, new { htmlAttributes = new { @id = "hidden", @class = "form-control" } })
                                    @Html.HiddenFor(Model => Model.idlecturer, new { htmlAttributes = new { @id = "hidden", @class = "form-control" } })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(Model => Model.Born, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.TextBoxFor(Model => Model.Born, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                                    @Html.ValidationMessageFor(Model => Model.Born, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(Model => Model.Address, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.TextBoxFor(Model => Model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(Model => Model.Address, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(Model => Model.Position, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.TextBoxFor(Model => Model.Position, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(Model => Model.Position, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(Model => Model.Mobile, htmlAttributes: new { @class = "control-label col-md-3" })
                                    @Html.TextBoxFor(Model => Model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(Model => Model.Mobile, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(Model => Model.Skype, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.TextBoxFor(Model => Model.Skype, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(Model => Model.Skype, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(Model => Model.Email, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.TextBoxFor(Model => Model.Email, new { htmlAttributes = new { @class = "form-control", @value = "Check" } })
                                    @Html.ValidationMessageFor(Model => Model.Email, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(Model => Model.Zalo, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.TextBoxFor(Model => Model.Zalo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(Model => Model.Zalo, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(Model => Model.Facebook, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.TextBoxFor(Model => Model.Facebook, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(Model => Model.Facebook, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(Model => Model.IDClass, htmlAttributes: new { @class = "control-label col-md-6" })

                                    @Html.DropDownListFor(Model => Model.IDClass, listclass, new { AllowHtmlAttribute = new { @id = "idclass", @class = "form-control" } })
                                    @Html.ValidationMessageFor(Model => Model.IDClass, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(Model => Model.Status, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.CheckBoxFor(Model => Model.Status, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(Model => Model.Status, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(Model => Model.Active, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.CheckBoxFor(Model => Model.Active, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(Model => Model.Active, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Update" class="btn btn-default" />
                                    </div>
                                </div>

                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>