@model Model.EF.User
@using System.Web.Mvc.Html

@{
    ViewBag.Title = "Index";
    Layout = "/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@section Header
{
    Thêm mới người dùng
}
@section js
{
    <script type="text/javascript" src="/Assets/Admin/js/testpass.js"></script>
}
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Nhập thông tin người dùng
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-lg-6">
                            @using (Html.BeginForm("Create", "Users", FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-6" })

                                    @Html.TextBoxFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-6" })

                                    @Html.TextBoxFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-6" })

                                    @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <div class="control-label col-md-6">
                                        @Html.Label("Nhập lại mật khẩu")
                                    </div>
                                    @Html.Password("RePass")
                                    <div class="text-danger">
                                        @Html.Label("Message")
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PhanQuyen, htmlAttributes: new { @class = "control-label col-md-6" })


                                    @Html.DropDownListFor(model => model.IDPhanQuyen, null, new { AllowHtmlAttribute = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.IDPhanQuyen, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Born, htmlAttributes: new { @class = "control-label col-md-6" })

                                    @Html.TextBoxFor(model => model.Born, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                                    @Html.ValidationMessageFor(model => model.Born, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-6" })

                                    @Html.TextBoxFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-6" })

                                    @Html.TextBoxFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-6" })

                                    @Html.TextBoxFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Skype, htmlAttributes: new { @class = "control-label col-md-6" })

                                    @Html.TextBoxFor(model => model.Skype, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Skype, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-6" })

                                    @Html.TextBoxFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @value = "Check" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Zalo, htmlAttributes: new { @class = "control-label col-md-6" })

                                    @Html.TextBoxFor(model => model.Zalo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Zalo, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Facebook, htmlAttributes: new { @class = "control-label col-md-6" })

                                    @Html.TextBoxFor(model => model.Facebook, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Facebook, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-6" })

                                    @Html.CheckBoxFor(model => model.Active, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-6" })

                                    @Html.CheckBoxFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Create" class="btn btn-default" />
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
